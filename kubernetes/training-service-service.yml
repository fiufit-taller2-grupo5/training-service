# A Service is a higher-level resource that provides network access to a set of replica Pods
# allowing them to communicate with each other and with external clients.
apiVersion: v1
kind: Service
metadata:
  name: training-service
  labels:
    app: training-service
spec:
  # Using a NodePort gives you the freedom to set up your own load balancing solution, to configure environments that are
  # not fully supported by Kubernetes, or even to expose one or more nodes' IP addresses directly.
  type: ClusterIP
  # Select all pods with label app: training-service
  selector:
    app: training-service
  ports:
    # The port number on which the Service listens for incoming traffic
    - port: 80
      # I can define a  name for the port and refer to it in the ingress
      name: training-service-port
      # Listens using TCP Protocol
      protocol: TCP
      # The port number on which the application running inside the Pods is listening and ready to receive traffic.
      # When a client sends traffic to the Service's port, the traffic is forwarded to one of the Pods in the deployment.
      # The traffic is then directed to the Pod's targetPort,
      targetPort: 80 # The port exposed in the training-service pod's containers
  
